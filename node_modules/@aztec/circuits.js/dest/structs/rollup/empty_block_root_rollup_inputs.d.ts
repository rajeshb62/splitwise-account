/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { Fr } from '@aztec/foundation/fields';
import { BufferReader } from '@aztec/foundation/serialize';
import { type FieldsOf } from '@aztec/foundation/types';
import { GlobalVariables } from '../global_variables.js';
import { AppendOnlyTreeSnapshot } from './append_only_tree_snapshot.js';
/**
 * Represents inputs of the empty block root rollup circuit.
 */
export declare class EmptyBlockRootRollupInputs {
    readonly archive: AppendOnlyTreeSnapshot;
    readonly blockHash: Fr;
    readonly globalVariables: GlobalVariables;
    readonly vkTreeRoot: Fr;
    readonly protocolContractTreeRoot: Fr;
    readonly proverId: Fr;
    constructor(archive: AppendOnlyTreeSnapshot, blockHash: Fr, globalVariables: GlobalVariables, vkTreeRoot: Fr, protocolContractTreeRoot: Fr, proverId: Fr);
    /**
     * Serializes the inputs to a buffer.
     * @returns - The inputs serialized to a buffer.
     */
    toBuffer(): Buffer;
    /**
     * Serializes the inputs to a hex string.
     * @returns The instance serialized to a hex string.
     */
    toString(): string;
    /**
     * Creates a new instance from fields.
     * @param fields - Fields to create the instance from.
     * @returns A new instance.
     */
    static from(fields: FieldsOf<EmptyBlockRootRollupInputs>): EmptyBlockRootRollupInputs;
    /**
     * Extracts fields from an instance.
     * @param fields - Fields to create the instance from.
     * @returns An array of fields.
     */
    static getFields(fields: FieldsOf<EmptyBlockRootRollupInputs>): readonly [AppendOnlyTreeSnapshot, Fr, GlobalVariables, Fr, Fr, Fr];
    /**
     * Deserializes the inputs from a buffer.
     * @param buffer - A buffer to deserialize from.
     * @returns A new RootRollupInputs instance.
     */
    static fromBuffer(buffer: Buffer | BufferReader): EmptyBlockRootRollupInputs;
    /**
     * Deserializes the inputs from a hex string.
     * @param str - A hex string to deserialize from.
     * @returns A new RootRollupInputs instance.
     */
    static fromString(str: string): EmptyBlockRootRollupInputs;
}
//# sourceMappingURL=empty_block_root_rollup_inputs.d.ts.map