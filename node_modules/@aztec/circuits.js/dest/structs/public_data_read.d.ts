/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { Fr } from '@aztec/foundation/fields';
import { BufferReader, FieldReader } from '@aztec/foundation/serialize';
/**
 * Read operations from the public state tree.
 */
export declare class PublicDataRead {
    /**
     * Index of the leaf in the public data tree.
     */
    readonly leafSlot: Fr;
    /**
     * Returned value from the public data tree.
     */
    readonly value: Fr;
    /**
     * Side effect counter tracking position of this event in tx execution.
     */
    readonly counter: number;
    constructor(
    /**
     * Index of the leaf in the public data tree.
     */
    leafSlot: Fr, 
    /**
     * Returned value from the public data tree.
     */
    value: Fr, 
    /**
     * Side effect counter tracking position of this event in tx execution.
     */
    counter: number);
    toBuffer(): Buffer;
    isEmpty(): boolean;
    static fromFields(fields: Fr[] | FieldReader): PublicDataRead;
    static fromBuffer(buffer: Buffer | BufferReader): PublicDataRead;
    static empty(): PublicDataRead;
    equals(other: PublicDataRead): boolean;
}
//# sourceMappingURL=public_data_read.d.ts.map