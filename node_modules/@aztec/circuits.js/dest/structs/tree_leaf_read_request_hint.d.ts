/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { Fr } from '@aztec/foundation/fields';
import { BufferReader, type Tuple } from '@aztec/foundation/serialize';
/**
 * Contains information which can be used to prove that a leaf is a member of a Merkle tree.
 */
export declare class TreeLeafReadRequestHint<N extends number> {
    /**
     * Sibling path of the leaf in the Merkle tree.
     */
    siblingPath: Tuple<Fr, N>;
    constructor(
    /**
     * Size of the sibling path (number of fields it contains).
     */
    pathSize: N, 
    /**
     * Sibling path of the leaf in the Merkle tree.
     */
    siblingPath: Tuple<Fr, N>);
    toBuffer(): Buffer;
    static empty<N extends number>(pathSize: N): TreeLeafReadRequestHint<N>;
    static fromBuffer<N extends number>(buffer: Buffer | BufferReader, size: N): TreeLeafReadRequestHint<N>;
}
//# sourceMappingURL=tree_leaf_read_request_hint.d.ts.map