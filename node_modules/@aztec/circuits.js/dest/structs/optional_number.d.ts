/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { type Fr } from '@aztec/foundation/fields';
import { BufferReader, FieldReader } from '@aztec/foundation/serialize';
import { type FieldsOf } from '@aztec/foundation/types';
export declare class OptionalNumber {
    /**
     * Whether a value was set.
     */
    isSome: boolean;
    /**
     * The actual number, if isSome is true.
     */
    value: number;
    constructor(
    /**
     * Whether a value was set.
     */
    isSome: boolean, 
    /**
     * The actual number, if isSome is true.
     */
    value: number);
    getSize(): number;
    static getFields(fields: FieldsOf<OptionalNumber>): readonly [boolean, number];
    toBuffer(): Buffer;
    static fromBuffer(buffer: Buffer | BufferReader): OptionalNumber;
    toFields(): Fr[];
    static fromFields(fields: Fr[] | FieldReader): OptionalNumber;
    isEmpty(): boolean;
    static empty(): OptionalNumber;
}
//# sourceMappingURL=optional_number.d.ts.map