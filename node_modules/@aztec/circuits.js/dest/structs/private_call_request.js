import { Fr } from '@aztec/foundation/fields';
import { BufferReader, FieldReader, serializeToBuffer, serializeToFields } from '@aztec/foundation/serialize';
import { CallContext } from './call_context.js';
export class PrivateCallRequest {
    constructor(
    /**
     * The call context of the call.
     */
    callContext, 
    /**
     * The hash of the arguments of the call.
     */
    argsHash, 
    /**
     * The hash of the return values of the call.
     */
    returnsHash, 
    /**
     * The start counter of the call.
     */
    startSideEffectCounter, 
    /**
     * The end counter of the call.
     */
    endSideEffectCounter) {
        this.callContext = callContext;
        this.argsHash = argsHash;
        this.returnsHash = returnsHash;
        this.startSideEffectCounter = startSideEffectCounter;
        this.endSideEffectCounter = endSideEffectCounter;
    }
    toFields() {
        return serializeToFields([
            this.callContext,
            this.argsHash,
            this.returnsHash,
            this.startSideEffectCounter,
            this.endSideEffectCounter,
        ]);
    }
    static fromFields(fields) {
        const reader = FieldReader.asReader(fields);
        return new PrivateCallRequest(reader.readObject(CallContext), reader.readField(), reader.readField(), reader.readU32(), reader.readU32());
    }
    toBuffer() {
        return serializeToBuffer(this.callContext, this.argsHash, this.returnsHash, this.startSideEffectCounter, this.endSideEffectCounter);
    }
    static fromBuffer(buffer) {
        const reader = BufferReader.asReader(buffer);
        return new PrivateCallRequest(reader.readObject(CallContext), Fr.fromBuffer(reader), Fr.fromBuffer(reader), reader.readNumber(), reader.readNumber());
    }
    isEmpty() {
        return (this.callContext.isEmpty() &&
            this.argsHash.isZero() &&
            this.returnsHash.isZero() &&
            this.startSideEffectCounter === 0 &&
            this.endSideEffectCounter === 0);
    }
    static empty() {
        return new PrivateCallRequest(CallContext.empty(), Fr.ZERO, Fr.ZERO, 0, 0);
    }
    equals(callRequest) {
        return (callRequest.callContext.equals(this.callContext) &&
            callRequest.argsHash.equals(this.argsHash) &&
            callRequest.returnsHash.equals(this.returnsHash) &&
            callRequest.startSideEffectCounter === this.startSideEffectCounter &&
            callRequest.endSideEffectCounter === this.endSideEffectCounter);
    }
    toString() {
        return `PrivateCallRequest(callContext: ${this.callContext}, argsHash: ${this.argsHash}, returnsHash: ${this.returnsHash}, startSideEffectCounter: ${this.startSideEffectCounter}, endSideEffectCounter: ${this.endSideEffectCounter})`;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpdmF0ZV9jYWxsX3JlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc3RydWN0cy9wcml2YXRlX2NhbGxfcmVxdWVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDOUMsT0FBTyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsaUJBQWlCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUU5RyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFaEQsTUFBTSxPQUFPLGtCQUFrQjtJQUM3QjtJQUNFOztPQUVHO0lBQ0ksV0FBd0I7SUFDL0I7O09BRUc7SUFDSSxRQUFZO0lBQ25COztPQUVHO0lBQ0ksV0FBZTtJQUN0Qjs7T0FFRztJQUNJLHNCQUE4QjtJQUNyQzs7T0FFRztJQUNJLG9CQUE0QjtRQWhCNUIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFJeEIsYUFBUSxHQUFSLFFBQVEsQ0FBSTtRQUlaLGdCQUFXLEdBQVgsV0FBVyxDQUFJO1FBSWYsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUFRO1FBSTlCLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBUTtJQUNsQyxDQUFDO0lBRUosUUFBUTtRQUNOLE9BQU8saUJBQWlCLENBQUM7WUFDdkIsSUFBSSxDQUFDLFdBQVc7WUFDaEIsSUFBSSxDQUFDLFFBQVE7WUFDYixJQUFJLENBQUMsV0FBVztZQUNoQixJQUFJLENBQUMsc0JBQXNCO1lBQzNCLElBQUksQ0FBQyxvQkFBb0I7U0FDMUIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBMEI7UUFDMUMsTUFBTSxNQUFNLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM1QyxPQUFPLElBQUksa0JBQWtCLENBQzNCLE1BQU0sQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLEVBQzlCLE1BQU0sQ0FBQyxTQUFTLEVBQUUsRUFDbEIsTUFBTSxDQUFDLFNBQVMsRUFBRSxFQUNsQixNQUFNLENBQUMsT0FBTyxFQUFFLEVBQ2hCLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FDakIsQ0FBQztJQUNKLENBQUM7SUFFRCxRQUFRO1FBQ04sT0FBTyxpQkFBaUIsQ0FDdEIsSUFBSSxDQUFDLFdBQVcsRUFDaEIsSUFBSSxDQUFDLFFBQVEsRUFDYixJQUFJLENBQUMsV0FBVyxFQUNoQixJQUFJLENBQUMsc0JBQXNCLEVBQzNCLElBQUksQ0FBQyxvQkFBb0IsQ0FDMUIsQ0FBQztJQUNKLENBQUM7SUFFTSxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQTZCO1FBQ3BELE1BQU0sTUFBTSxHQUFHLFlBQVksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0MsT0FBTyxJQUFJLGtCQUFrQixDQUMzQixNQUFNLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxFQUM5QixFQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUNyQixFQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUNyQixNQUFNLENBQUMsVUFBVSxFQUFFLEVBQ25CLE1BQU0sQ0FBQyxVQUFVLEVBQUUsQ0FDcEIsQ0FBQztJQUNKLENBQUM7SUFFRCxPQUFPO1FBQ0wsT0FBTyxDQUNMLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFO1lBQzFCLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFO1lBQ3RCLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFO1lBQ3pCLElBQUksQ0FBQyxzQkFBc0IsS0FBSyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxvQkFBb0IsS0FBSyxDQUFDLENBQ2hDLENBQUM7SUFDSixDQUFDO0lBRU0sTUFBTSxDQUFDLEtBQUs7UUFDakIsT0FBTyxJQUFJLGtCQUFrQixDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzdFLENBQUM7SUFFRCxNQUFNLENBQUMsV0FBK0I7UUFDcEMsT0FBTyxDQUNMLFdBQVcsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7WUFDaEQsV0FBVyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUMxQyxXQUFXLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO1lBQ2hELFdBQVcsQ0FBQyxzQkFBc0IsS0FBSyxJQUFJLENBQUMsc0JBQXNCO1lBQ2xFLFdBQVcsQ0FBQyxvQkFBb0IsS0FBSyxJQUFJLENBQUMsb0JBQW9CLENBQy9ELENBQUM7SUFDSixDQUFDO0lBRUQsUUFBUTtRQUNOLE9BQU8sbUNBQW1DLElBQUksQ0FBQyxXQUFXLGVBQWUsSUFBSSxDQUFDLFFBQVEsa0JBQWtCLElBQUksQ0FBQyxXQUFXLDZCQUE2QixJQUFJLENBQUMsc0JBQXNCLDJCQUEyQixJQUFJLENBQUMsb0JBQW9CLEdBQUcsQ0FBQztJQUMxTyxDQUFDO0NBQ0YifQ==