/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { type Fr } from '@aztec/foundation/fields';
import { BufferReader, FieldReader } from '@aztec/foundation/serialize';
import { type FieldsOf } from '@aztec/foundation/types';
import { inspect } from 'util';
import { PublicCallStackItemCompressed } from './public_call_stack_item_compressed.js';
/**
 * Represents a request to call a public function.
 */
export declare class PublicInnerCallRequest {
    item: PublicCallStackItemCompressed;
    /**
     * The counter for this call request.
     */
    counter: number;
    constructor(item: PublicCallStackItemCompressed, 
    /**
     * The counter for this call request.
     */
    counter: number);
    getSize(): number;
    /**
     * Serialize this as a buffer.
     * @returns The buffer.
     */
    toBuffer(): Buffer;
    /**
     * Deserialize this from a buffer.
     * @param buffer - The bufferable type from which to deserialize.
     * @returns The deserialized instance of PublicInnerCallRequest.
     */
    static fromBuffer(buffer: Buffer | BufferReader): PublicInnerCallRequest;
    /**
     * Create PublicInnerCallRequest from a fields dictionary.
     * @param fields - The dictionary.
     * @returns A PublicInnerCallRequest object.
     */
    static from(fields: FieldsOf<PublicInnerCallRequest>): PublicInnerCallRequest;
    /**
     * Serialize into a field array. Low-level utility.
     * @param fields - Object with fields.
     * @returns The array.
     */
    static getFields(fields: FieldsOf<PublicInnerCallRequest>): readonly [PublicCallStackItemCompressed, number];
    toFields(): Fr[];
    static fromFields(fields: Fr[] | FieldReader): PublicInnerCallRequest;
    static empty(): PublicInnerCallRequest;
    isEmpty(): boolean;
    [inspect.custom](): string;
}
//# sourceMappingURL=public_inner_call_request.d.ts.map