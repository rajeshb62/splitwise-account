import { serializeToBuffer } from '@aztec/foundation/serialize';
export class PrivateKernelResetDimensions {
    constructor(NOTE_HASH_PENDING_AMOUNT, NOTE_HASH_SETTLED_AMOUNT, NULLIFIER_PENDING_AMOUNT, NULLIFIER_SETTLED_AMOUNT, NULLIFIER_KEYS, TRANSIENT_DATA_AMOUNT, NOTE_HASH_SILOING_AMOUNT, NULLIFIER_SILOING_AMOUNT, ENCRYPTED_LOG_SILOING_AMOUNT) {
        this.NOTE_HASH_PENDING_AMOUNT = NOTE_HASH_PENDING_AMOUNT;
        this.NOTE_HASH_SETTLED_AMOUNT = NOTE_HASH_SETTLED_AMOUNT;
        this.NULLIFIER_PENDING_AMOUNT = NULLIFIER_PENDING_AMOUNT;
        this.NULLIFIER_SETTLED_AMOUNT = NULLIFIER_SETTLED_AMOUNT;
        this.NULLIFIER_KEYS = NULLIFIER_KEYS;
        this.TRANSIENT_DATA_AMOUNT = TRANSIENT_DATA_AMOUNT;
        this.NOTE_HASH_SILOING_AMOUNT = NOTE_HASH_SILOING_AMOUNT;
        this.NULLIFIER_SILOING_AMOUNT = NULLIFIER_SILOING_AMOUNT;
        this.ENCRYPTED_LOG_SILOING_AMOUNT = ENCRYPTED_LOG_SILOING_AMOUNT;
    }
    toBuffer() {
        return serializeToBuffer(this.NOTE_HASH_PENDING_AMOUNT, this.NOTE_HASH_SETTLED_AMOUNT, this.NULLIFIER_PENDING_AMOUNT, this.NULLIFIER_SETTLED_AMOUNT, this.NULLIFIER_KEYS, this.TRANSIENT_DATA_AMOUNT, this.NOTE_HASH_SILOING_AMOUNT, this.NULLIFIER_SILOING_AMOUNT, this.ENCRYPTED_LOG_SILOING_AMOUNT);
    }
    static empty() {
        return new PrivateKernelResetDimensions(0, 0, 0, 0, 0, 0, 0, 0, 0);
    }
    static from(fields) {
        const dimensions = PrivateKernelResetDimensions.empty();
        privateKernelResetDimensionNames.forEach(name => (dimensions[name] = fields[name] ?? 0));
        return dimensions;
    }
    static fromValues(values) {
        if (values.length !== privateKernelResetDimensionNames.length) {
            throw new Error(`Not enough values for all dimensions. Required ${privateKernelResetDimensionNames.length}. Got ${values.length}.`);
        }
        const dimensions = PrivateKernelResetDimensions.empty();
        privateKernelResetDimensionNames.forEach((name, i) => (dimensions[name] = values[i]));
        return dimensions;
    }
    toValues() {
        return privateKernelResetDimensionNames.map(name => this[name]);
    }
}
export const privateKernelResetDimensionNames = [
    'NOTE_HASH_PENDING_AMOUNT',
    'NOTE_HASH_SETTLED_AMOUNT',
    'NULLIFIER_PENDING_AMOUNT',
    'NULLIFIER_SETTLED_AMOUNT',
    'NULLIFIER_KEYS',
    'TRANSIENT_DATA_AMOUNT',
    'NOTE_HASH_SILOING_AMOUNT',
    'NULLIFIER_SILOING_AMOUNT',
    'ENCRYPTED_LOG_SILOING_AMOUNT',
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpdmF0ZV9rZXJuZWxfcmVzZXRfZGltZW5zaW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHJ1Y3RzL2tlcm5lbC9wcml2YXRlX2tlcm5lbF9yZXNldF9kaW1lbnNpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBR2hFLE1BQU0sT0FBTyw0QkFBNEI7SUFDdkMsWUFDUyx3QkFBZ0MsRUFDaEMsd0JBQWdDLEVBQ2hDLHdCQUFnQyxFQUNoQyx3QkFBZ0MsRUFDaEMsY0FBc0IsRUFDdEIscUJBQTZCLEVBQzdCLHdCQUFnQyxFQUNoQyx3QkFBZ0MsRUFDaEMsNEJBQW9DO1FBUnBDLDZCQUF3QixHQUF4Qix3QkFBd0IsQ0FBUTtRQUNoQyw2QkFBd0IsR0FBeEIsd0JBQXdCLENBQVE7UUFDaEMsNkJBQXdCLEdBQXhCLHdCQUF3QixDQUFRO1FBQ2hDLDZCQUF3QixHQUF4Qix3QkFBd0IsQ0FBUTtRQUNoQyxtQkFBYyxHQUFkLGNBQWMsQ0FBUTtRQUN0QiwwQkFBcUIsR0FBckIscUJBQXFCLENBQVE7UUFDN0IsNkJBQXdCLEdBQXhCLHdCQUF3QixDQUFRO1FBQ2hDLDZCQUF3QixHQUF4Qix3QkFBd0IsQ0FBUTtRQUNoQyxpQ0FBNEIsR0FBNUIsNEJBQTRCLENBQVE7SUFDMUMsQ0FBQztJQUVKLFFBQVE7UUFDTixPQUFPLGlCQUFpQixDQUN0QixJQUFJLENBQUMsd0JBQXdCLEVBQzdCLElBQUksQ0FBQyx3QkFBd0IsRUFDN0IsSUFBSSxDQUFDLHdCQUF3QixFQUM3QixJQUFJLENBQUMsd0JBQXdCLEVBQzdCLElBQUksQ0FBQyxjQUFjLEVBQ25CLElBQUksQ0FBQyxxQkFBcUIsRUFDMUIsSUFBSSxDQUFDLHdCQUF3QixFQUM3QixJQUFJLENBQUMsd0JBQXdCLEVBQzdCLElBQUksQ0FBQyw0QkFBNEIsQ0FDbEMsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsS0FBSztRQUNWLE9BQU8sSUFBSSw0QkFBNEIsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQXVEO1FBQ2pFLE1BQU0sVUFBVSxHQUFHLDRCQUE0QixDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3hELGdDQUFnQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3pGLE9BQU8sVUFBVSxDQUFDO0lBQ3BCLENBQUM7SUFFRCxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQWdCO1FBQ2hDLElBQUksTUFBTSxDQUFDLE1BQU0sS0FBSyxnQ0FBZ0MsQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUM5RCxNQUFNLElBQUksS0FBSyxDQUNiLGtEQUFrRCxnQ0FBZ0MsQ0FBQyxNQUFNLFNBQVMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUNuSCxDQUFDO1FBQ0osQ0FBQztRQUNELE1BQU0sVUFBVSxHQUFHLDRCQUE0QixDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3hELGdDQUFnQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdEYsT0FBTyxVQUFVLENBQUM7SUFDcEIsQ0FBQztJQUVELFFBQVE7UUFDTixPQUFPLGdDQUFnQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7Q0FDRjtBQUlELE1BQU0sQ0FBQyxNQUFNLGdDQUFnQyxHQUFvQjtJQUMvRCwwQkFBMEI7SUFDMUIsMEJBQTBCO0lBQzFCLDBCQUEwQjtJQUMxQiwwQkFBMEI7SUFDMUIsZ0JBQWdCO0lBQ2hCLHVCQUF1QjtJQUN2QiwwQkFBMEI7SUFDMUIsMEJBQTBCO0lBQzFCLDhCQUE4QjtDQUMvQixDQUFDIn0=