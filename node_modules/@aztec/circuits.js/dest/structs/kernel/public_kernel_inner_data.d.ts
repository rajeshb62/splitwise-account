/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { BufferReader } from '@aztec/foundation/serialize';
import { NESTED_RECURSIVE_PROOF_LENGTH } from '../../constants.gen.js';
import { RecursiveProof } from '../recursive_proof.js';
import { VerificationKeyData } from '../verification_key.js';
import { VMCircuitPublicInputs } from './vm_circuit_public_inputs.js';
/**
 * Data of the previous public kernel iteration in the chain of kernels.
 */
export declare class PublicKernelInnerData {
    /**
     * Public inputs of the previous kernel.
     */
    publicInputs: VMCircuitPublicInputs;
    /**
     * Proof of the previous kernel.
     */
    proof: RecursiveProof<typeof NESTED_RECURSIVE_PROOF_LENGTH>;
    /**
     * Verification key of the previous kernel.
     */
    vk: VerificationKeyData;
    constructor(
    /**
     * Public inputs of the previous kernel.
     */
    publicInputs: VMCircuitPublicInputs, 
    /**
     * Proof of the previous kernel.
     */
    proof: RecursiveProof<typeof NESTED_RECURSIVE_PROOF_LENGTH>, 
    /**
     * Verification key of the previous kernel.
     */
    vk: VerificationKeyData);
    static fromBuffer(buffer: Buffer | BufferReader): PublicKernelInnerData;
    static empty(): PublicKernelInnerData;
    /**
     * Serialize this as a buffer.
     * @returns The buffer.
     */
    toBuffer(): Buffer;
}
//# sourceMappingURL=public_kernel_inner_data.d.ts.map