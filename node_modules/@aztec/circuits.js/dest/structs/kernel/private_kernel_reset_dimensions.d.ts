/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { type FieldsOf } from '@aztec/foundation/types';
export declare class PrivateKernelResetDimensions {
    NOTE_HASH_PENDING_AMOUNT: number;
    NOTE_HASH_SETTLED_AMOUNT: number;
    NULLIFIER_PENDING_AMOUNT: number;
    NULLIFIER_SETTLED_AMOUNT: number;
    NULLIFIER_KEYS: number;
    TRANSIENT_DATA_AMOUNT: number;
    NOTE_HASH_SILOING_AMOUNT: number;
    NULLIFIER_SILOING_AMOUNT: number;
    ENCRYPTED_LOG_SILOING_AMOUNT: number;
    constructor(NOTE_HASH_PENDING_AMOUNT: number, NOTE_HASH_SETTLED_AMOUNT: number, NULLIFIER_PENDING_AMOUNT: number, NULLIFIER_SETTLED_AMOUNT: number, NULLIFIER_KEYS: number, TRANSIENT_DATA_AMOUNT: number, NOTE_HASH_SILOING_AMOUNT: number, NULLIFIER_SILOING_AMOUNT: number, ENCRYPTED_LOG_SILOING_AMOUNT: number);
    toBuffer(): Buffer;
    static empty(): PrivateKernelResetDimensions;
    static from(fields: Partial<FieldsOf<PrivateKernelResetDimensions>>): PrivateKernelResetDimensions;
    static fromValues(values: number[]): PrivateKernelResetDimensions;
    toValues(): number[];
}
export type DimensionName = keyof FieldsOf<PrivateKernelResetDimensions>;
export declare const privateKernelResetDimensionNames: DimensionName[];
export interface DimensionConfig {
    variants: number[];
    standalone: number[];
    cost: number;
}
export interface PrivateKernelResetDimensionsConfig {
    dimensions: {
        [K in DimensionName]: DimensionConfig;
    };
    specialCases: number[][];
}
//# sourceMappingURL=private_kernel_reset_dimensions.d.ts.map