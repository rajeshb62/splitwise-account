/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { BufferReader, type Tuple } from '@aztec/foundation/serialize';
import { KeyValidationHint, type NoteHashReadRequestHints, type NullifierReadRequestHints } from '../read_request_hints/index.js';
import { TransientDataIndexHint } from '../transient_data_index_hint.js';
export { TransientDataIndexHint } from '../transient_data_index_hint.js';
export declare class PrivateKernelResetHints<NH_RR_PENDING extends number, NH_RR_SETTLED extends number, NLL_RR_PENDING extends number, NLL_RR_SETTLED extends number, KEY_VALIDATION_REQUESTS extends number, NUM_TRANSIENT_DATA_INDEX_HINTS extends number> {
    /**
     * Contains hints for the transient read requests to localize corresponding commitments.
     */
    noteHashReadRequestHints: NoteHashReadRequestHints<NH_RR_PENDING, NH_RR_SETTLED>;
    /**
     * Contains hints for the nullifier read requests to locate corresponding pending or settled nullifiers.
     */
    nullifierReadRequestHints: NullifierReadRequestHints<NLL_RR_PENDING, NLL_RR_SETTLED>;
    /**
     * Contains hints for key validation request.
     */
    keyValidationHints: Tuple<KeyValidationHint, KEY_VALIDATION_REQUESTS>;
    /**
     * Contains hints for the transient note hashes to locate corresponding nullifiers.
     */
    transientDataIndexHints: Tuple<TransientDataIndexHint, NUM_TRANSIENT_DATA_INDEX_HINTS>;
    /**
     * The "final" minRevertibleSideEffectCounter of a tx, to split the data for squashing.
     * Not the minRevertibleSideEffectCounter at the point the reset circuit is run.
     */
    validationRequestsSplitCounter: number;
    constructor(
    /**
     * Contains hints for the transient read requests to localize corresponding commitments.
     */
    noteHashReadRequestHints: NoteHashReadRequestHints<NH_RR_PENDING, NH_RR_SETTLED>, 
    /**
     * Contains hints for the nullifier read requests to locate corresponding pending or settled nullifiers.
     */
    nullifierReadRequestHints: NullifierReadRequestHints<NLL_RR_PENDING, NLL_RR_SETTLED>, 
    /**
     * Contains hints for key validation request.
     */
    keyValidationHints: Tuple<KeyValidationHint, KEY_VALIDATION_REQUESTS>, 
    /**
     * Contains hints for the transient note hashes to locate corresponding nullifiers.
     */
    transientDataIndexHints: Tuple<TransientDataIndexHint, NUM_TRANSIENT_DATA_INDEX_HINTS>, 
    /**
     * The "final" minRevertibleSideEffectCounter of a tx, to split the data for squashing.
     * Not the minRevertibleSideEffectCounter at the point the reset circuit is run.
     */
    validationRequestsSplitCounter: number);
    toBuffer(): Buffer;
    trimToSizes<NEW_NH_RR_PENDING extends number, NEW_NH_RR_SETTLED extends number, NEW_NLL_RR_PENDING extends number, NEW_NLL_RR_SETTLED extends number, NEW_KEY_VALIDATION_REQUESTS extends number, NUM_TRANSIENT_DATA_INDEX_HINTS extends number>(numNoteHashReadRequestPending: NEW_NH_RR_PENDING, numNoteHashReadRequestSettled: NEW_NH_RR_SETTLED, numNullifierReadRequestPending: NEW_NLL_RR_PENDING, numNullifierReadRequestSettled: NEW_NLL_RR_SETTLED, numKeyValidationRequests: NEW_KEY_VALIDATION_REQUESTS, numTransientDataIndexHints: NUM_TRANSIENT_DATA_INDEX_HINTS): PrivateKernelResetHints<NEW_NH_RR_PENDING, NEW_NH_RR_SETTLED, NEW_NLL_RR_PENDING, NEW_NLL_RR_SETTLED, NEW_KEY_VALIDATION_REQUESTS, NUM_TRANSIENT_DATA_INDEX_HINTS>;
    /**
     * Deserializes from a buffer or reader.
     * @param buffer - Buffer or reader to read from.
     * @returns The deserialized instance.
     */
    static fromBuffer<NH_RR_PENDING extends number, NH_RR_SETTLED extends number, NLL_RR_PENDING extends number, NLL_RR_SETTLED extends number, KEY_VALIDATION_REQUESTS extends number, NUM_TRANSIENT_DATA_INDEX_HINTS extends number>(buffer: Buffer | BufferReader, numNoteHashReadRequestPending: NH_RR_PENDING, numNoteHashReadRequestSettled: NH_RR_SETTLED, numNullifierReadRequestPending: NLL_RR_PENDING, numNullifierReadRequestSettled: NLL_RR_SETTLED, numNullifierKeys: KEY_VALIDATION_REQUESTS, numTransientDataIndexHints: NUM_TRANSIENT_DATA_INDEX_HINTS): PrivateKernelResetHints<NH_RR_PENDING, NH_RR_SETTLED, NLL_RR_PENDING, NLL_RR_SETTLED, KEY_VALIDATION_REQUESTS, NUM_TRANSIENT_DATA_INDEX_HINTS>;
}
//# sourceMappingURL=private_kernel_reset_hints.d.ts.map