/* Autogenerated file, do not edit! */
/* eslint-disable */
import { Contract, ContractBase, DeployMethod, Fr, NoteSelector, PublicKeys, loadContractArtifact, } from '@aztec/aztec.js';
import StaticChildContractArtifactJson from '../artifacts/static_child_contract-StaticChild.json' assert { type: 'json' };
export const StaticChildContractArtifact = loadContractArtifact(StaticChildContractArtifactJson);
/**
 * Type-safe interface for contract StaticChild;
 */
export class StaticChildContract extends ContractBase {
    constructor(instance, wallet) {
        super(instance, StaticChildContractArtifact, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return Contract.at(address, StaticChildContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(wallet) {
        return new DeployMethod(PublicKeys.default(), wallet, StaticChildContractArtifact, StaticChildContract.at, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public keys hash to derive the address.
     */
    static deployWithPublicKeys(publicKeys, wallet) {
        return new DeployMethod(publicKeys, wallet, StaticChildContractArtifact, StaticChildContract.at, Array.from(arguments).slice(2));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified constructor method.
     */
    static deployWithOpts(opts, ...args) {
        return new DeployMethod(opts.publicKeys ?? PublicKeys.default(), opts.wallet, StaticChildContractArtifact, StaticChildContract.at, Array.from(arguments).slice(1), opts.method ?? 'constructor');
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return StaticChildContractArtifact;
    }
    static get storage() {
        return {
            current_value: {
                slot: new Fr(1n),
            },
            a_private_value: {
                slot: new Fr(2n),
            },
        };
    }
    static get notes() {
        return {
            ValueNote: {
                id: new NoteSelector(1038582377),
            },
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RhdGljQ2hpbGQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvU3RhdGljQ2hpbGQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0NBQXNDO0FBRXRDLG9CQUFvQjtBQUNwQixPQUFPLEVBS0wsUUFBUSxFQUVSLFlBQVksRUFNWixZQUFZLEVBS1osRUFBRSxFQUlGLFlBQVksRUFHWixVQUFVLEVBS1Ysb0JBQW9CLEdBQ3JCLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTywrQkFBK0IsTUFBTSxxREFBcUQsQ0FBQyxTQUFTLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztBQUUxSCxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRyxvQkFBb0IsQ0FDN0QsK0JBQXVELENBQ3hELENBQUM7QUFFRjs7R0FFRztBQUNILE1BQU0sT0FBTyxtQkFBb0IsU0FBUSxZQUFZO0lBQ25ELFlBQW9CLFFBQXFDLEVBQUUsTUFBYztRQUN2RSxLQUFLLENBQUMsUUFBUSxFQUFFLDJCQUEyQixFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLE9BQXFCLEVBQUUsTUFBYztRQUMxRCxPQUFPLFFBQVEsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLG1CQUFtQixDQUFDLFFBQVEsRUFBRSxNQUFNLENBQWlDLENBQUM7SUFDcEcsQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFjO1FBQ2pDLE9BQU8sSUFBSSxZQUFZLENBQ3JCLFVBQVUsQ0FBQyxPQUFPLEVBQUUsRUFDcEIsTUFBTSxFQUNOLDJCQUEyQixFQUMzQixtQkFBbUIsQ0FBQyxFQUFFLEVBQ3RCLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLG9CQUFvQixDQUFDLFVBQXNCLEVBQUUsTUFBYztRQUN2RSxPQUFPLElBQUksWUFBWSxDQUNyQixVQUFVLEVBQ1YsTUFBTSxFQUNOLDJCQUEyQixFQUMzQixtQkFBbUIsQ0FBQyxFQUFFLEVBQ3RCLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLGNBQWMsQ0FDMUIsSUFBNkQsRUFDN0QsR0FBRyxJQUFtRDtRQUV0RCxPQUFPLElBQUksWUFBWSxDQUNyQixJQUFJLENBQUMsVUFBVSxJQUFJLFVBQVUsQ0FBQyxPQUFPLEVBQUUsRUFDdkMsSUFBSSxDQUFDLE1BQU0sRUFDWCwyQkFBMkIsRUFDM0IsbUJBQW1CLENBQUMsRUFBRSxFQUN0QixLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFDOUIsSUFBSSxDQUFDLE1BQU0sSUFBSSxhQUFhLENBQzdCLENBQUM7SUFDSixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLEtBQUssUUFBUTtRQUN4QixPQUFPLDJCQUEyQixDQUFDO0lBQ3JDLENBQUM7SUFFTSxNQUFNLEtBQUssT0FBTztRQUN2QixPQUFPO1lBQ0wsYUFBYSxFQUFFO2dCQUNiLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDakI7WUFDRCxlQUFlLEVBQUU7Z0JBQ2YsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQzthQUNqQjtTQUM0RCxDQUFDO0lBQ2xFLENBQUM7SUFFTSxNQUFNLEtBQUssS0FBSztRQUNyQixPQUFPO1lBQ0wsU0FBUyxFQUFFO2dCQUNULEVBQUUsRUFBRSxJQUFJLFlBQVksQ0FBQyxVQUFVLENBQUM7YUFDakM7U0FDNEIsQ0FBQztJQUNsQyxDQUFDO0NBOENGIn0=