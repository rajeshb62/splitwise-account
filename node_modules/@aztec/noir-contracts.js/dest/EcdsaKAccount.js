/* Autogenerated file, do not edit! */
/* eslint-disable */
import { Contract, ContractBase, DeployMethod, Fr, NoteSelector, PublicKeys, loadContractArtifact, } from '@aztec/aztec.js';
import EcdsaKAccountContractArtifactJson from '../artifacts/ecdsa_k_account_contract-EcdsaKAccount.json' assert { type: 'json' };
export const EcdsaKAccountContractArtifact = loadContractArtifact(EcdsaKAccountContractArtifactJson);
/**
 * Type-safe interface for contract EcdsaKAccount;
 */
export class EcdsaKAccountContract extends ContractBase {
    constructor(instance, wallet) {
        super(instance, EcdsaKAccountContractArtifact, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return Contract.at(address, EcdsaKAccountContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(wallet, signing_pub_key_x, signing_pub_key_y) {
        return new DeployMethod(PublicKeys.default(), wallet, EcdsaKAccountContractArtifact, EcdsaKAccountContract.at, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public keys hash to derive the address.
     */
    static deployWithPublicKeys(publicKeys, wallet, signing_pub_key_x, signing_pub_key_y) {
        return new DeployMethod(publicKeys, wallet, EcdsaKAccountContractArtifact, EcdsaKAccountContract.at, Array.from(arguments).slice(2));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified constructor method.
     */
    static deployWithOpts(opts, ...args) {
        return new DeployMethod(opts.publicKeys ?? PublicKeys.default(), opts.wallet, EcdsaKAccountContractArtifact, EcdsaKAccountContract.at, Array.from(arguments).slice(1), opts.method ?? 'constructor');
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return EcdsaKAccountContractArtifact;
    }
    static get storage() {
        return {
            public_key: {
                slot: new Fr(1n),
            },
        };
    }
    static get notes() {
        return {
            EcdsaPublicKeyNote: {
                id: new NoteSelector(79774112),
            },
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWNkc2FLQWNjb3VudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9FY2RzYUtBY2NvdW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNDQUFzQztBQUV0QyxvQkFBb0I7QUFDcEIsT0FBTyxFQUtMLFFBQVEsRUFFUixZQUFZLEVBTVosWUFBWSxFQUtaLEVBQUUsRUFJRixZQUFZLEVBR1osVUFBVSxFQUtWLG9CQUFvQixHQUNyQixNQUFNLGlCQUFpQixDQUFDO0FBRXpCLE9BQU8saUNBQWlDLE1BQU0sMERBQTBELENBQUMsU0FBUyxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFFakksTUFBTSxDQUFDLE1BQU0sNkJBQTZCLEdBQUcsb0JBQW9CLENBQy9ELGlDQUF5RCxDQUMxRCxDQUFDO0FBRUY7O0dBRUc7QUFDSCxNQUFNLE9BQU8scUJBQXNCLFNBQVEsWUFBWTtJQUNyRCxZQUFvQixRQUFxQyxFQUFFLE1BQWM7UUFDdkUsS0FBSyxDQUFDLFFBQVEsRUFBRSw2QkFBNkIsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN6RCxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxPQUFxQixFQUFFLE1BQWM7UUFDMUQsT0FBTyxRQUFRLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxxQkFBcUIsQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFtQyxDQUFDO0lBQ3hHLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBYyxFQUFFLGlCQUFzQyxFQUFFLGlCQUFzQztRQUNqSCxPQUFPLElBQUksWUFBWSxDQUNyQixVQUFVLENBQUMsT0FBTyxFQUFFLEVBQ3BCLE1BQU0sRUFDTiw2QkFBNkIsRUFDN0IscUJBQXFCLENBQUMsRUFBRSxFQUN4QixLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FDL0IsQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxvQkFBb0IsQ0FDaEMsVUFBc0IsRUFDdEIsTUFBYyxFQUNkLGlCQUFzQyxFQUN0QyxpQkFBc0M7UUFFdEMsT0FBTyxJQUFJLFlBQVksQ0FDckIsVUFBVSxFQUNWLE1BQU0sRUFDTiw2QkFBNkIsRUFDN0IscUJBQXFCLENBQUMsRUFBRSxFQUN4QixLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FDL0IsQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxjQUFjLENBQzFCLElBQTZELEVBQzdELEdBQUcsSUFBcUQ7UUFFeEQsT0FBTyxJQUFJLFlBQVksQ0FDckIsSUFBSSxDQUFDLFVBQVUsSUFBSSxVQUFVLENBQUMsT0FBTyxFQUFFLEVBQ3ZDLElBQUksQ0FBQyxNQUFNLEVBQ1gsNkJBQTZCLEVBQzdCLHFCQUFxQixDQUFDLEVBQUUsRUFDeEIsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQzlCLElBQUksQ0FBQyxNQUFNLElBQUksYUFBYSxDQUM3QixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxLQUFLLFFBQVE7UUFDeEIsT0FBTyw2QkFBNkIsQ0FBQztJQUN2QyxDQUFDO0lBRU0sTUFBTSxLQUFLLE9BQU87UUFDdkIsT0FBTztZQUNMLFVBQVUsRUFBRTtnQkFDVixJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2pCO1NBQ3FDLENBQUM7SUFDM0MsQ0FBQztJQUVNLE1BQU0sS0FBSyxLQUFLO1FBQ3JCLE9BQU87WUFDTCxrQkFBa0IsRUFBRTtnQkFDbEIsRUFBRSxFQUFFLElBQUksWUFBWSxDQUFDLFFBQVEsQ0FBQzthQUMvQjtTQUNxQyxDQUFDO0lBQzNDLENBQUM7Q0FvREYifQ==