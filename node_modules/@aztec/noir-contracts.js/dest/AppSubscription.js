/* Autogenerated file, do not edit! */
/* eslint-disable */
import { Contract, ContractBase, DeployMethod, Fr, NoteSelector, PublicKeys, loadContractArtifact, } from '@aztec/aztec.js';
import AppSubscriptionContractArtifactJson from '../artifacts/app_subscription_contract-AppSubscription.json' assert { type: 'json' };
export const AppSubscriptionContractArtifact = loadContractArtifact(AppSubscriptionContractArtifactJson);
/**
 * Type-safe interface for contract AppSubscription;
 */
export class AppSubscriptionContract extends ContractBase {
    constructor(instance, wallet) {
        super(instance, AppSubscriptionContractArtifact, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return Contract.at(address, AppSubscriptionContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(wallet, target_address, subscription_recipient_address, subscription_token_address, subscription_price, fee_juice_limit_per_tx) {
        return new DeployMethod(PublicKeys.default(), wallet, AppSubscriptionContractArtifact, AppSubscriptionContract.at, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public keys hash to derive the address.
     */
    static deployWithPublicKeys(publicKeys, wallet, target_address, subscription_recipient_address, subscription_token_address, subscription_price, fee_juice_limit_per_tx) {
        return new DeployMethod(publicKeys, wallet, AppSubscriptionContractArtifact, AppSubscriptionContract.at, Array.from(arguments).slice(2));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified constructor method.
     */
    static deployWithOpts(opts, ...args) {
        return new DeployMethod(opts.publicKeys ?? PublicKeys.default(), opts.wallet, AppSubscriptionContractArtifact, AppSubscriptionContract.at, Array.from(arguments).slice(1), opts.method ?? 'constructor');
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return AppSubscriptionContractArtifact;
    }
    static get storage() {
        return {
            target_address: {
                slot: new Fr(1n),
            },
            subscription_token_address: {
                slot: new Fr(2n),
            },
            subscription_recipient_address: {
                slot: new Fr(3n),
            },
            subscription_price: {
                slot: new Fr(4n),
            },
            subscriptions: {
                slot: new Fr(5n),
            },
            fee_juice_limit_per_tx: {
                slot: new Fr(6n),
            },
        };
    }
    static get notes() {
        return {
            TransparentNote: {
                id: new NoteSelector(3193649735),
            },
            TokenNote: {
                id: new NoteSelector(2350566847),
            },
            SubscriptionNote: {
                id: new NoteSelector(3064460783),
            },
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwU3Vic2NyaXB0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0FwcFN1YnNjcmlwdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBc0M7QUFFdEMsb0JBQW9CO0FBQ3BCLE9BQU8sRUFLTCxRQUFRLEVBRVIsWUFBWSxFQU1aLFlBQVksRUFLWixFQUFFLEVBSUYsWUFBWSxFQUdaLFVBQVUsRUFLVixvQkFBb0IsR0FDckIsTUFBTSxpQkFBaUIsQ0FBQztBQUV6QixPQUFPLG1DQUFtQyxNQUFNLDZEQUE2RCxDQUFDLFNBQVMsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDO0FBRXRJLE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUFHLG9CQUFvQixDQUNqRSxtQ0FBMkQsQ0FDNUQsQ0FBQztBQUVGOztHQUVHO0FBQ0gsTUFBTSxPQUFPLHVCQUF3QixTQUFRLFlBQVk7SUFDdkQsWUFBb0IsUUFBcUMsRUFBRSxNQUFjO1FBQ3ZFLEtBQUssQ0FBQyxRQUFRLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ksTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsT0FBcUIsRUFBRSxNQUFjO1FBQzFELE9BQU8sUUFBUSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsdUJBQXVCLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBcUMsQ0FBQztJQUM1RyxDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsTUFBTSxDQUNsQixNQUFjLEVBQ2QsY0FBZ0MsRUFDaEMsOEJBQWdELEVBQ2hELDBCQUE0QyxFQUM1QyxrQkFBNkIsRUFDN0Isc0JBQWlDO1FBRWpDLE9BQU8sSUFBSSxZQUFZLENBQ3JCLFVBQVUsQ0FBQyxPQUFPLEVBQUUsRUFDcEIsTUFBTSxFQUNOLCtCQUErQixFQUMvQix1QkFBdUIsQ0FBQyxFQUFFLEVBQzFCLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLG9CQUFvQixDQUNoQyxVQUFzQixFQUN0QixNQUFjLEVBQ2QsY0FBZ0MsRUFDaEMsOEJBQWdELEVBQ2hELDBCQUE0QyxFQUM1QyxrQkFBNkIsRUFDN0Isc0JBQWlDO1FBRWpDLE9BQU8sSUFBSSxZQUFZLENBQ3JCLFVBQVUsRUFDVixNQUFNLEVBQ04sK0JBQStCLEVBQy9CLHVCQUF1QixDQUFDLEVBQUUsRUFDMUIsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQy9CLENBQUM7SUFDSixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsY0FBYyxDQUMxQixJQUE2RCxFQUM3RCxHQUFHLElBQXVEO1FBRTFELE9BQU8sSUFBSSxZQUFZLENBQ3JCLElBQUksQ0FBQyxVQUFVLElBQUksVUFBVSxDQUFDLE9BQU8sRUFBRSxFQUN2QyxJQUFJLENBQUMsTUFBTSxFQUNYLCtCQUErQixFQUMvQix1QkFBdUIsQ0FBQyxFQUFFLEVBQzFCLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUM5QixJQUFJLENBQUMsTUFBTSxJQUFJLGFBQWEsQ0FDN0IsQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sS0FBSyxRQUFRO1FBQ3hCLE9BQU8sK0JBQStCLENBQUM7SUFDekMsQ0FBQztJQUVNLE1BQU0sS0FBSyxPQUFPO1FBUXZCLE9BQU87WUFDTCxjQUFjLEVBQUU7Z0JBQ2QsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQzthQUNqQjtZQUNELDBCQUEwQixFQUFFO2dCQUMxQixJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2pCO1lBQ0QsOEJBQThCLEVBQUU7Z0JBQzlCLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDakI7WUFDRCxrQkFBa0IsRUFBRTtnQkFDbEIsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQzthQUNqQjtZQUNELGFBQWEsRUFBRTtnQkFDYixJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2pCO1lBQ0Qsc0JBQXNCLEVBQUU7Z0JBQ3RCLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDakI7U0FRRixDQUFDO0lBQ0osQ0FBQztJQUVNLE1BQU0sS0FBSyxLQUFLO1FBQ3JCLE9BQU87WUFDTCxlQUFlLEVBQUU7Z0JBQ2YsRUFBRSxFQUFFLElBQUksWUFBWSxDQUFDLFVBQVUsQ0FBQzthQUNqQztZQUNELFNBQVMsRUFBRTtnQkFDVCxFQUFFLEVBQUUsSUFBSSxZQUFZLENBQUMsVUFBVSxDQUFDO2FBQ2pDO1lBQ0QsZ0JBQWdCLEVBQUU7Z0JBQ2hCLEVBQUUsRUFBRSxJQUFJLFlBQVksQ0FBQyxVQUFVLENBQUM7YUFDakM7U0FDcUUsQ0FBQztJQUMzRSxDQUFDO0NBd0RGIn0=