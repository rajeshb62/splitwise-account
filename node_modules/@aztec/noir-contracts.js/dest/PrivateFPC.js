/* Autogenerated file, do not edit! */
/* eslint-disable */
import { Contract, ContractBase, DeployMethod, Fr, NoteSelector, PublicKeys, loadContractArtifact, } from '@aztec/aztec.js';
import PrivateFPCContractArtifactJson from '../artifacts/private_fpc_contract-PrivateFPC.json' assert { type: 'json' };
export const PrivateFPCContractArtifact = loadContractArtifact(PrivateFPCContractArtifactJson);
/**
 * Type-safe interface for contract PrivateFPC;
 */
export class PrivateFPCContract extends ContractBase {
    constructor(instance, wallet) {
        super(instance, PrivateFPCContractArtifact, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return Contract.at(address, PrivateFPCContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(wallet, other_asset, admin) {
        return new DeployMethod(PublicKeys.default(), wallet, PrivateFPCContractArtifact, PrivateFPCContract.at, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public keys hash to derive the address.
     */
    static deployWithPublicKeys(publicKeys, wallet, other_asset, admin) {
        return new DeployMethod(publicKeys, wallet, PrivateFPCContractArtifact, PrivateFPCContract.at, Array.from(arguments).slice(2));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified constructor method.
     */
    static deployWithOpts(opts, ...args) {
        return new DeployMethod(opts.publicKeys ?? PublicKeys.default(), opts.wallet, PrivateFPCContractArtifact, PrivateFPCContract.at, Array.from(arguments).slice(1), opts.method ?? 'constructor');
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return PrivateFPCContractArtifact;
    }
    static get storage() {
        return {
            settings: {
                slot: new Fr(1n),
            },
        };
    }
    static get notes() {
        return {
            TransparentNote: {
                id: new NoteSelector(3193649735),
            },
            TokenNote: {
                id: new NoteSelector(2350566847),
            },
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJpdmF0ZUZQQy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Qcml2YXRlRlBDLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNDQUFzQztBQUV0QyxvQkFBb0I7QUFDcEIsT0FBTyxFQUtMLFFBQVEsRUFFUixZQUFZLEVBTVosWUFBWSxFQUtaLEVBQUUsRUFJRixZQUFZLEVBR1osVUFBVSxFQUtWLG9CQUFvQixHQUNyQixNQUFNLGlCQUFpQixDQUFDO0FBRXpCLE9BQU8sOEJBQThCLE1BQU0sbURBQW1ELENBQUMsU0FBUyxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFFdkgsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBQUcsb0JBQW9CLENBQUMsOEJBQXNELENBQUMsQ0FBQztBQUV2SDs7R0FFRztBQUNILE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxZQUFZO0lBQ2xELFlBQW9CLFFBQXFDLEVBQUUsTUFBYztRQUN2RSxLQUFLLENBQUMsUUFBUSxFQUFFLDBCQUEwQixFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLE9BQXFCLEVBQUUsTUFBYztRQUMxRCxPQUFPLFFBQVEsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLGtCQUFrQixDQUFDLFFBQVEsRUFBRSxNQUFNLENBQWdDLENBQUM7SUFDbEcsQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFjLEVBQUUsV0FBNkIsRUFBRSxLQUF1QjtRQUN6RixPQUFPLElBQUksWUFBWSxDQUNyQixVQUFVLENBQUMsT0FBTyxFQUFFLEVBQ3BCLE1BQU0sRUFDTiwwQkFBMEIsRUFDMUIsa0JBQWtCLENBQUMsRUFBRSxFQUNyQixLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FDL0IsQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxvQkFBb0IsQ0FDaEMsVUFBc0IsRUFDdEIsTUFBYyxFQUNkLFdBQTZCLEVBQzdCLEtBQXVCO1FBRXZCLE9BQU8sSUFBSSxZQUFZLENBQ3JCLFVBQVUsRUFDVixNQUFNLEVBQ04sMEJBQTBCLEVBQzFCLGtCQUFrQixDQUFDLEVBQUUsRUFDckIsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQy9CLENBQUM7SUFDSixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsY0FBYyxDQUMxQixJQUE2RCxFQUM3RCxHQUFHLElBQWtEO1FBRXJELE9BQU8sSUFBSSxZQUFZLENBQ3JCLElBQUksQ0FBQyxVQUFVLElBQUksVUFBVSxDQUFDLE9BQU8sRUFBRSxFQUN2QyxJQUFJLENBQUMsTUFBTSxFQUNYLDBCQUEwQixFQUMxQixrQkFBa0IsQ0FBQyxFQUFFLEVBQ3JCLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUM5QixJQUFJLENBQUMsTUFBTSxJQUFJLGFBQWEsQ0FDN0IsQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sS0FBSyxRQUFRO1FBQ3hCLE9BQU8sMEJBQTBCLENBQUM7SUFDcEMsQ0FBQztJQUVNLE1BQU0sS0FBSyxPQUFPO1FBQ3ZCLE9BQU87WUFDTCxRQUFRLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQzthQUNqQjtTQUNtQyxDQUFDO0lBQ3pDLENBQUM7SUFFTSxNQUFNLEtBQUssS0FBSztRQUNyQixPQUFPO1lBQ0wsZUFBZSxFQUFFO2dCQUNmLEVBQUUsRUFBRSxJQUFJLFlBQVksQ0FBQyxVQUFVLENBQUM7YUFDakM7WUFDRCxTQUFTLEVBQUU7Z0JBQ1QsRUFBRSxFQUFFLElBQUksWUFBWSxDQUFDLFVBQVUsQ0FBQzthQUNqQztTQUNnRCxDQUFDO0lBQ3RELENBQUM7Q0EwQkYifQ==