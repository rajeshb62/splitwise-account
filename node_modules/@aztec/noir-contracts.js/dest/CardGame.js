/* Autogenerated file, do not edit! */
/* eslint-disable */
import { Contract, ContractBase, DeployMethod, Fr, NoteSelector, PublicKeys, loadContractArtifact, } from '@aztec/aztec.js';
import CardGameContractArtifactJson from '../artifacts/card_game_contract-CardGame.json' assert { type: 'json' };
export const CardGameContractArtifact = loadContractArtifact(CardGameContractArtifactJson);
/**
 * Type-safe interface for contract CardGame;
 */
export class CardGameContract extends ContractBase {
    constructor(instance, wallet) {
        super(instance, CardGameContractArtifact, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return Contract.at(address, CardGameContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(wallet) {
        return new DeployMethod(PublicKeys.default(), wallet, CardGameContractArtifact, CardGameContract.at, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public keys hash to derive the address.
     */
    static deployWithPublicKeys(publicKeys, wallet) {
        return new DeployMethod(publicKeys, wallet, CardGameContractArtifact, CardGameContract.at, Array.from(arguments).slice(2));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified constructor method.
     */
    static deployWithOpts(opts, ...args) {
        return new DeployMethod(opts.publicKeys ?? PublicKeys.default(), opts.wallet, CardGameContractArtifact, CardGameContract.at, Array.from(arguments).slice(1), opts.method ?? 'constructor');
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return CardGameContractArtifact;
    }
    static get storage() {
        return {
            collections: {
                slot: new Fr(1n),
            },
            game_decks: {
                slot: new Fr(2n),
            },
            games: {
                slot: new Fr(3n),
            },
        };
    }
    static get notes() {
        return {
            ValueNote: {
                id: new NoteSelector(1038582377),
            },
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FyZEdhbWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQ2FyZEdhbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0NBQXNDO0FBRXRDLG9CQUFvQjtBQUNwQixPQUFPLEVBS0wsUUFBUSxFQUVSLFlBQVksRUFNWixZQUFZLEVBS1osRUFBRSxFQUlGLFlBQVksRUFHWixVQUFVLEVBS1Ysb0JBQW9CLEdBQ3JCLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTyw0QkFBNEIsTUFBTSwrQ0FBK0MsQ0FBQyxTQUFTLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztBQUVqSCxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxvQkFBb0IsQ0FBQyw0QkFBb0QsQ0FBQyxDQUFDO0FBRW5IOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGdCQUFpQixTQUFRLFlBQVk7SUFDaEQsWUFBb0IsUUFBcUMsRUFBRSxNQUFjO1FBQ3ZFLEtBQUssQ0FBQyxRQUFRLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ksTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsT0FBcUIsRUFBRSxNQUFjO1FBQzFELE9BQU8sUUFBUSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBOEIsQ0FBQztJQUM5RixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQWM7UUFDakMsT0FBTyxJQUFJLFlBQVksQ0FDckIsVUFBVSxDQUFDLE9BQU8sRUFBRSxFQUNwQixNQUFNLEVBQ04sd0JBQXdCLEVBQ3hCLGdCQUFnQixDQUFDLEVBQUUsRUFDbkIsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQy9CLENBQUM7SUFDSixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsb0JBQW9CLENBQUMsVUFBc0IsRUFBRSxNQUFjO1FBQ3ZFLE9BQU8sSUFBSSxZQUFZLENBQ3JCLFVBQVUsRUFDVixNQUFNLEVBQ04sd0JBQXdCLEVBQ3hCLGdCQUFnQixDQUFDLEVBQUUsRUFDbkIsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQy9CLENBQUM7SUFDSixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsY0FBYyxDQUMxQixJQUE2RCxFQUM3RCxHQUFHLElBQWdEO1FBRW5ELE9BQU8sSUFBSSxZQUFZLENBQ3JCLElBQUksQ0FBQyxVQUFVLElBQUksVUFBVSxDQUFDLE9BQU8sRUFBRSxFQUN2QyxJQUFJLENBQUMsTUFBTSxFQUNYLHdCQUF3QixFQUN4QixnQkFBZ0IsQ0FBQyxFQUFFLEVBQ25CLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUM5QixJQUFJLENBQUMsTUFBTSxJQUFJLGFBQWEsQ0FDN0IsQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sS0FBSyxRQUFRO1FBQ3hCLE9BQU8sd0JBQXdCLENBQUM7SUFDbEMsQ0FBQztJQUVNLE1BQU0sS0FBSyxPQUFPO1FBQ3ZCLE9BQU87WUFDTCxXQUFXLEVBQUU7Z0JBQ1gsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQzthQUNqQjtZQUNELFVBQVUsRUFBRTtnQkFDVixJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2pCO1lBQ0QsS0FBSyxFQUFFO2dCQUNMLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDakI7U0FDK0QsQ0FBQztJQUNyRSxDQUFDO0lBRU0sTUFBTSxLQUFLLEtBQUs7UUFDckIsT0FBTztZQUNMLFNBQVMsRUFBRTtnQkFDVCxFQUFFLEVBQUUsSUFBSSxZQUFZLENBQUMsVUFBVSxDQUFDO2FBQ2pDO1NBQzRCLENBQUM7SUFDbEMsQ0FBQztDQXNERiJ9