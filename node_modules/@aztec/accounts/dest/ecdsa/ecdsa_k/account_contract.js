import { AuthWitness } from '@aztec/circuit-types';
import { Ecdsa } from '@aztec/circuits.js/barretenberg';
import { DefaultAccountContract } from '../../defaults/account_contract.js';
import { EcdsaKAccountContractArtifact } from './artifact.js';
/**
 * Account contract that authenticates transactions using ECDSA signatures
 * verified against a secp256k1 public key stored in an immutable encrypted note.
 */
export class EcdsaKAccountContract extends DefaultAccountContract {
    constructor(signingPrivateKey) {
        super(EcdsaKAccountContractArtifact);
        this.signingPrivateKey = signingPrivateKey;
    }
    getDeploymentArgs() {
        const signingPublicKey = new Ecdsa().computePublicKey(this.signingPrivateKey);
        return [signingPublicKey.subarray(0, 32), signingPublicKey.subarray(32, 64)];
    }
    getAuthWitnessProvider(_address) {
        return new EcdsaKAuthWitnessProvider(this.signingPrivateKey);
    }
}
/** Creates auth witnesses using ECDSA signatures. */
class EcdsaKAuthWitnessProvider {
    constructor(signingPrivateKey) {
        this.signingPrivateKey = signingPrivateKey;
    }
    createAuthWit(messageHash) {
        const ecdsa = new Ecdsa();
        const signature = ecdsa.constructSignature(messageHash.toBuffer(), this.signingPrivateKey);
        return Promise.resolve(new AuthWitness(messageHash, [...signature.r, ...signature.s]));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudF9jb250cmFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9lY2RzYS9lY2RzYV9rL2FjY291bnRfY29udHJhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBd0IsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFJeEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDNUUsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxxQkFBc0IsU0FBUSxzQkFBc0I7SUFDL0QsWUFBb0IsaUJBQXlCO1FBQzNDLEtBQUssQ0FBQyw2QkFBaUQsQ0FBQyxDQUFDO1FBRHZDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBUTtJQUU3QyxDQUFDO0lBRUQsaUJBQWlCO1FBQ2YsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQzlFLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMvRSxDQUFDO0lBRUQsc0JBQXNCLENBQUMsUUFBeUI7UUFDOUMsT0FBTyxJQUFJLHlCQUF5QixDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQy9ELENBQUM7Q0FDRjtBQUVELHFEQUFxRDtBQUNyRCxNQUFNLHlCQUF5QjtJQUM3QixZQUFvQixpQkFBeUI7UUFBekIsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFRO0lBQUcsQ0FBQztJQUVqRCxhQUFhLENBQUMsV0FBZTtRQUMzQixNQUFNLEtBQUssR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBQzFCLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDM0YsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksV0FBVyxDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUMsRUFBRSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDekYsQ0FBQztDQUNGIn0=