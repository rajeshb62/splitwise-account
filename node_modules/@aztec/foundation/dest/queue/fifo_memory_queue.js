import { BaseMemoryQueue } from './base_memory_queue.js';
/**
 * A simple fifo queue. It can grow unbounded. It can have multiple producers and consumers.
 * Putting an item onto the queue always succeeds, unless either end() or cancel() has been called in which case
 * the item being pushed is simply discarded.
 */
export class FifoMemoryQueue extends BaseMemoryQueue {
    constructor(log) {
        super(log);
        this.container = new FifoQueue();
    }
    get items() {
        return this.container;
    }
}
class FifoQueue {
    constructor() {
        this.items = [];
    }
    put(item) {
        this.items.push(item);
    }
    get() {
        return this.items.shift();
    }
    get length() {
        return this.items.length;
    }
    clear() {
        this.items = [];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlmb19tZW1vcnlfcXVldWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcXVldWUvZmlmb19tZW1vcnlfcXVldWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXpEOzs7O0dBSUc7QUFDSCxNQUFNLE9BQU8sZUFBbUIsU0FBUSxlQUFrQjtJQUd4RCxZQUFZLEdBQWlCO1FBQzNCLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUhMLGNBQVMsR0FBRyxJQUFJLFNBQVMsRUFBSyxDQUFDO0lBSXZDLENBQUM7SUFFRCxJQUF1QixLQUFLO1FBQzFCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0NBQ0Y7QUFFRCxNQUFNLFNBQVM7SUFBZjtRQUNVLFVBQUssR0FBUSxFQUFFLENBQUM7SUFpQjFCLENBQUM7SUFmUSxHQUFHLENBQUMsSUFBTztRQUNoQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRU0sR0FBRztRQUNSLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBRUQsSUFBVyxNQUFNO1FBQ2YsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUMzQixDQUFDO0lBRU0sS0FBSztRQUNWLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiJ9