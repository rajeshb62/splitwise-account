/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { Buffer32 } from '../../buffer/buffer32.js';
/**
 * Computes the Keccak-256 hash of the given input buffer.
 *
 * @param input - The input buffer to be hashed.
 * @returns The computed Keccak-256 hash as a Buffer.
 */
export declare function keccak256(input: Buffer | Buffer32): Buffer;
/**
 * Computes the keccak-256 hash of a given input string and returns the result as a hexadecimal string.
 */
export declare function keccak256String(input: string): string;
/**
 * Computes the Keccak-224 hash of the given input buffer.
 *
 * @param input - The input buffer to be hashed.
 * @returns The computed Keccak-224 hash as a Buffer.
 */
export declare function keccak224(input: Buffer): Buffer;
/**
 * Computes the Keccak-f1600 permutation of the input.
 * @param state 25 64-bit words.
 * @returns The permuted state.
 */
export declare function keccakf1600(state: bigint[]): bigint[];
//# sourceMappingURL=index.d.ts.map