import { Buffer32 } from '@aztec/foundation/buffer';
import { type EthAddress } from '@aztec/foundation/eth-address';
import { type Signature } from '@aztec/foundation/eth-signature';
/**
 * Secp256k1Signer
 *
 * A class for signing messages using a secp256k1 private key.
 * - This is a slim drop in replacement for an Ethereum signer, so it can be used in the same way.
 * - See `utils.ts` for functions that enable recovering addresses and public keys from signatures.
 */
export declare class Secp256k1Signer {
    private privateKey;
    readonly address: EthAddress;
    constructor(privateKey: Buffer32);
    sign(message: Buffer32): Signature;
    /**
     * Sign a message using the same method as eth_sign
     * @param message - The message to sign.
     * @returns The signature.
     */
    signMessage(message: Buffer32): Signature;
    static random(): Secp256k1Signer;
}
//# sourceMappingURL=secp256k1_signer.d.ts.map