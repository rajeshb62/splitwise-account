/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { CallContext, type PublicCallRequest } from '@aztec/circuits.js';
import { Fr } from '@aztec/foundation/fields';
import { BufferReader } from '@aztec/foundation/serialize';
import { type FieldsOf } from '@aztec/foundation/types';
import { inspect } from 'util';
/**
 * The execution request of a public function.
 */
export declare class PublicExecutionRequest {
    /**
     * Context of the public call.
     */
    callContext: CallContext;
    /**
     * Function arguments.
     */
    args: Fr[];
    constructor(
    /**
     * Context of the public call.
     */
    callContext: CallContext, 
    /**
     * Function arguments.
     */
    args: Fr[]);
    getSize(): number;
    toBuffer(): Buffer;
    static fromBuffer(buffer: Buffer | BufferReader): PublicExecutionRequest;
    static from(fields: FieldsOf<PublicExecutionRequest>): PublicExecutionRequest;
    static getFields(fields: FieldsOf<PublicExecutionRequest>): readonly [CallContext, Fr[]];
    static empty(): PublicExecutionRequest;
    isEmpty(): boolean;
    isForCallRequest(callRequest: PublicCallRequest): boolean;
    [inspect.custom](): string;
}
//# sourceMappingURL=public_execution_request.d.ts.map