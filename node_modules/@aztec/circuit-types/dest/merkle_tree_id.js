import { ARCHIVE_HEIGHT, ARCHIVE_TREE_ID, L1_TO_L2_MESSAGE_TREE_ID, L1_TO_L2_MSG_TREE_HEIGHT, NOTE_HASH_TREE_HEIGHT, NOTE_HASH_TREE_ID, NULLIFIER_TREE_HEIGHT, NULLIFIER_TREE_ID, PUBLIC_DATA_TREE_HEIGHT, PUBLIC_DATA_TREE_ID, } from '@aztec/circuits.js';
/**
 * Defines the possible Merkle tree IDs.
 * @remarks The MerkleTrees class expects these to start from zero and be in incremental order.
 */
export var MerkleTreeId;
(function (MerkleTreeId) {
    MerkleTreeId[MerkleTreeId["NULLIFIER_TREE"] = 0] = "NULLIFIER_TREE";
    MerkleTreeId[MerkleTreeId["NOTE_HASH_TREE"] = 1] = "NOTE_HASH_TREE";
    MerkleTreeId[MerkleTreeId["PUBLIC_DATA_TREE"] = 2] = "PUBLIC_DATA_TREE";
    MerkleTreeId[MerkleTreeId["L1_TO_L2_MESSAGE_TREE"] = 3] = "L1_TO_L2_MESSAGE_TREE";
    MerkleTreeId[MerkleTreeId["ARCHIVE"] = 4] = "ARCHIVE";
})(MerkleTreeId || (MerkleTreeId = {}));
export const merkleTreeIds = () => {
    return Object.values(MerkleTreeId).filter((v) => !isNaN(Number(v)));
};
const TREE_HEIGHTS = {
    [MerkleTreeId.NOTE_HASH_TREE]: NOTE_HASH_TREE_HEIGHT,
    [MerkleTreeId.ARCHIVE]: ARCHIVE_HEIGHT,
    [MerkleTreeId.L1_TO_L2_MESSAGE_TREE]: L1_TO_L2_MSG_TREE_HEIGHT,
    [MerkleTreeId.NULLIFIER_TREE]: NULLIFIER_TREE_HEIGHT,
    [MerkleTreeId.PUBLIC_DATA_TREE]: PUBLIC_DATA_TREE_HEIGHT,
};
export function getTreeHeight(treeId) {
    return TREE_HEIGHTS[treeId];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVya2xlX3RyZWVfaWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbWVya2xlX3RyZWVfaWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLGNBQWMsRUFDZCxlQUFlLEVBQ2Ysd0JBQXdCLEVBQ3hCLHdCQUF3QixFQUN4QixxQkFBcUIsRUFDckIsaUJBQWlCLEVBQ2pCLHFCQUFxQixFQUNyQixpQkFBaUIsRUFDakIsdUJBQXVCLEVBQ3ZCLG1CQUFtQixHQUNwQixNQUFNLG9CQUFvQixDQUFDO0FBRTVCOzs7R0FHRztBQUNILE1BQU0sQ0FBTixJQUFZLFlBTVg7QUFORCxXQUFZLFlBQVk7SUFDdEIsbUVBQWtDLENBQUE7SUFDbEMsbUVBQWtDLENBQUE7SUFDbEMsdUVBQXNDLENBQUE7SUFDdEMsaUZBQWdELENBQUE7SUFDaEQscURBQXlCLENBQUE7QUFDM0IsQ0FBQyxFQU5XLFlBQVksS0FBWixZQUFZLFFBTXZCO0FBRUQsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLEdBQUcsRUFBRTtJQUNoQyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFxQixFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN6RixDQUFDLENBQUM7QUFFRixNQUFNLFlBQVksR0FBRztJQUNuQixDQUFDLFlBQVksQ0FBQyxjQUFjLENBQUMsRUFBRSxxQkFBcUI7SUFDcEQsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLEVBQUUsY0FBYztJQUN0QyxDQUFDLFlBQVksQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFLHdCQUF3QjtJQUM5RCxDQUFDLFlBQVksQ0FBQyxjQUFjLENBQUMsRUFBRSxxQkFBcUI7SUFDcEQsQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsRUFBRSx1QkFBdUI7Q0FDaEQsQ0FBQztBQUlYLE1BQU0sVUFBVSxhQUFhLENBQTJCLE1BQVc7SUFDakUsT0FBTyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDOUIsQ0FBQyJ9