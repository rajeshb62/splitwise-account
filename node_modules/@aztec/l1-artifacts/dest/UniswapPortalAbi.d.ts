/**
 * UniswapPortal ABI.
 */
export declare const UniswapPortalAbi: readonly [{
    readonly type: "function";
    readonly name: "ROUTER";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "contract ISwapRouter";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "initialize";
    readonly inputs: readonly [{
        readonly name: "_registry";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "_l2UniswapAddress";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "l2UniswapAddress";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "registry";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "contract IRegistry";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "swapPrivate";
    readonly inputs: readonly [{
        readonly name: "_inputTokenPortal";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "_inAmount";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "_uniswapFeeTier";
        readonly type: "uint24";
        readonly internalType: "uint24";
    }, {
        readonly name: "_outputTokenPortal";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "_amountOutMinimum";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "_secretHashForRedeemingMintedNotes";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "_secretHashForL1ToL2Message";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "_withCaller";
        readonly type: "bool";
        readonly internalType: "bool";
    }, {
        readonly name: "_outboxMessageMetadata";
        readonly type: "tuple[2]";
        readonly internalType: "struct DataStructures.OutboxMessageMetadata[2]";
        readonly components: readonly [{
            readonly name: "_l2BlockNumber";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_leafIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_path";
            readonly type: "bytes32[]";
            readonly internalType: "bytes32[]";
        }];
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "swapPublic";
    readonly inputs: readonly [{
        readonly name: "_inputTokenPortal";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "_inAmount";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "_uniswapFeeTier";
        readonly type: "uint24";
        readonly internalType: "uint24";
    }, {
        readonly name: "_outputTokenPortal";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "_amountOutMinimum";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "_aztecRecipient";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "_secretHashForL1ToL2Message";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "_withCaller";
        readonly type: "bool";
        readonly internalType: "bool";
    }, {
        readonly name: "_outboxMessageMetadata";
        readonly type: "tuple[2]";
        readonly internalType: "struct DataStructures.OutboxMessageMetadata[2]";
        readonly components: readonly [{
            readonly name: "_l2BlockNumber";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_leafIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_path";
            readonly type: "bytes32[]";
            readonly internalType: "bytes32[]";
        }];
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly stateMutability: "nonpayable";
}];
//# sourceMappingURL=UniswapPortalAbi.d.ts.map