/**
 * Apella ABI.
 */
export declare const ApellaAbi: readonly [{
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "_asset";
        readonly type: "address";
        readonly internalType: "contract IERC20";
    }, {
        readonly name: "_gerousia";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "ASSET";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "contract IERC20";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "ballots";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "user";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "yea";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "nea";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "deposit";
    readonly inputs: readonly [{
        readonly name: "_onBehalfOf";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "_amount";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "dropProposal";
    readonly inputs: readonly [{
        readonly name: "_proposalId";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "execute";
    readonly inputs: readonly [{
        readonly name: "_proposalId";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "finaliseWithdraw";
    readonly inputs: readonly [{
        readonly name: "_withdrawalId";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "gerousia";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getConfiguration";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "tuple";
        readonly internalType: "struct DataStructures.Configuration";
        readonly components: readonly [{
            readonly name: "votingDelay";
            readonly type: "uint256";
            readonly internalType: "Timestamp";
        }, {
            readonly name: "votingDuration";
            readonly type: "uint256";
            readonly internalType: "Timestamp";
        }, {
            readonly name: "executionDelay";
            readonly type: "uint256";
            readonly internalType: "Timestamp";
        }, {
            readonly name: "gracePeriod";
            readonly type: "uint256";
            readonly internalType: "Timestamp";
        }, {
            readonly name: "quorum";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "voteDifferential";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "minimumVotes";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getProposal";
    readonly inputs: readonly [{
        readonly name: "_proposalId";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "tuple";
        readonly internalType: "struct DataStructures.Proposal";
        readonly components: readonly [{
            readonly name: "config";
            readonly type: "tuple";
            readonly internalType: "struct DataStructures.Configuration";
            readonly components: readonly [{
                readonly name: "votingDelay";
                readonly type: "uint256";
                readonly internalType: "Timestamp";
            }, {
                readonly name: "votingDuration";
                readonly type: "uint256";
                readonly internalType: "Timestamp";
            }, {
                readonly name: "executionDelay";
                readonly type: "uint256";
                readonly internalType: "Timestamp";
            }, {
                readonly name: "gracePeriod";
                readonly type: "uint256";
                readonly internalType: "Timestamp";
            }, {
                readonly name: "quorum";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "voteDifferential";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minimumVotes";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "state";
            readonly type: "uint8";
            readonly internalType: "enum DataStructures.ProposalState";
        }, {
            readonly name: "payload";
            readonly type: "address";
            readonly internalType: "contract IPayload";
        }, {
            readonly name: "creator";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "creation";
            readonly type: "uint256";
            readonly internalType: "Timestamp";
        }, {
            readonly name: "summedBallot";
            readonly type: "tuple";
            readonly internalType: "struct DataStructures.Ballot";
            readonly components: readonly [{
                readonly name: "yea";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "nea";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getProposalState";
    readonly inputs: readonly [{
        readonly name: "_proposalId";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint8";
        readonly internalType: "enum DataStructures.ProposalState";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getWithdrawal";
    readonly inputs: readonly [{
        readonly name: "_withdrawalId";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "tuple";
        readonly internalType: "struct DataStructures.Withdrawal";
        readonly components: readonly [{
            readonly name: "amount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "unlocksAt";
            readonly type: "uint256";
            readonly internalType: "Timestamp";
        }, {
            readonly name: "recipient";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "claimed";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "initiateWithdraw";
    readonly inputs: readonly [{
        readonly name: "_to";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "_amount";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "powerAt";
    readonly inputs: readonly [{
        readonly name: "_owner";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "_ts";
        readonly type: "uint256";
        readonly internalType: "Timestamp";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "proposalCount";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "propose";
    readonly inputs: readonly [{
        readonly name: "_proposal";
        readonly type: "address";
        readonly internalType: "contract IPayload";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "totalPowerAt";
    readonly inputs: readonly [{
        readonly name: "_ts";
        readonly type: "uint256";
        readonly internalType: "Timestamp";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "updateConfiguration";
    readonly inputs: readonly [{
        readonly name: "_configuration";
        readonly type: "tuple";
        readonly internalType: "struct DataStructures.Configuration";
        readonly components: readonly [{
            readonly name: "votingDelay";
            readonly type: "uint256";
            readonly internalType: "Timestamp";
        }, {
            readonly name: "votingDuration";
            readonly type: "uint256";
            readonly internalType: "Timestamp";
        }, {
            readonly name: "executionDelay";
            readonly type: "uint256";
            readonly internalType: "Timestamp";
        }, {
            readonly name: "gracePeriod";
            readonly type: "uint256";
            readonly internalType: "Timestamp";
        }, {
            readonly name: "quorum";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "voteDifferential";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "minimumVotes";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "updateGerousia";
    readonly inputs: readonly [{
        readonly name: "_gerousia";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "vote";
    readonly inputs: readonly [{
        readonly name: "_proposalId";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "_amount";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "_support";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "withdrawalCount";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "event";
    readonly name: "ConfigurationUpdated";
    readonly inputs: readonly [{
        readonly name: "time";
        readonly type: "uint256";
        readonly indexed: true;
        readonly internalType: "Timestamp";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "Deposit";
    readonly inputs: readonly [{
        readonly name: "depositor";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "onBehalfOf";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "GerousiaUpdated";
    readonly inputs: readonly [{
        readonly name: "gerousia";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "ProposalExecuted";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly type: "uint256";
        readonly indexed: true;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "Proposed";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly type: "uint256";
        readonly indexed: true;
        readonly internalType: "uint256";
    }, {
        readonly name: "proposal";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "VoteCast";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly type: "uint256";
        readonly indexed: true;
        readonly internalType: "uint256";
    }, {
        readonly name: "voter";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "support";
        readonly type: "bool";
        readonly indexed: false;
        readonly internalType: "bool";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "WithdrawFinalised";
    readonly inputs: readonly [{
        readonly name: "withdrawalId";
        readonly type: "uint256";
        readonly indexed: true;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "WithdrawInitiated";
    readonly inputs: readonly [{
        readonly name: "withdrawalId";
        readonly type: "uint256";
        readonly indexed: true;
        readonly internalType: "uint256";
    }, {
        readonly name: "recipient";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "error";
    readonly name: "AddressEmptyCode";
    readonly inputs: readonly [{
        readonly name: "target";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "AddressInsufficientBalance";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "Apella__CallFailed";
    readonly inputs: readonly [{
        readonly name: "target";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "Apella__CallerNotGerousia";
    readonly inputs: readonly [{
        readonly name: "caller";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "gerousia";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "Apella__CallerNotSelf";
    readonly inputs: readonly [{
        readonly name: "caller";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "self";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "Apella__CannotCallAsset";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "Apella__ConfigurationLib__DifferentialTooBig";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "Apella__ConfigurationLib__InvalidMinimumVotes";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "Apella__ConfigurationLib__QuorumTooBig";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "Apella__ConfigurationLib__QuorumTooSmall";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "Apella__ConfigurationLib__TimeTooBig";
    readonly inputs: readonly [{
        readonly name: "name";
        readonly type: "string";
        readonly internalType: "string";
    }];
}, {
    readonly type: "error";
    readonly name: "Apella__ConfigurationLib__TimeTooSmall";
    readonly inputs: readonly [{
        readonly name: "name";
        readonly type: "string";
        readonly internalType: "string";
    }];
}, {
    readonly type: "error";
    readonly name: "Apella__InsufficientPower";
    readonly inputs: readonly [{
        readonly name: "voter";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "have";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "required";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "Apella__NoCheckpointsFound";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "Apella__ProposalAlreadyDropped";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "Apella__ProposalCannotBeDropped";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "Apella__ProposalDoesNotExists";
    readonly inputs: readonly [{
        readonly name: "proposalId";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "Apella__ProposalNotActive";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "Apella__ProposalNotExecutable";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "Apella__UserLib__NotInPast";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "Apella__WithdrawalAlreadyclaimed";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "Apella__WithdrawalNotUnlockedYet";
    readonly inputs: readonly [{
        readonly name: "currentTime";
        readonly type: "uint256";
        readonly internalType: "Timestamp";
    }, {
        readonly name: "unlocksAt";
        readonly type: "uint256";
        readonly internalType: "Timestamp";
    }];
}, {
    readonly type: "error";
    readonly name: "FailedInnerCall";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "MathOverflowedMulDiv";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "SafeERC20FailedOperation";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly type: "address";
        readonly internalType: "address";
    }];
}];
//# sourceMappingURL=ApellaAbi.d.ts.map