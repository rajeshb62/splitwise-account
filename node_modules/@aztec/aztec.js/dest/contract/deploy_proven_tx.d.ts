import { type PXE, type Tx } from '@aztec/circuit-types';
import { type AztecAddress, type ContractInstanceWithAddress } from '@aztec/circuits.js';
import { type Wallet } from '../account/index.js';
import { type Contract } from './contract.js';
import { DeploySentTx } from './deploy_sent_tx.js';
import { ProvenTx } from './proven_tx.js';
/**
 * A proven transaction that can be sent to the network. Returned by the `prove` method of a contract deployment.
 */
export declare class DeployProvenTx<TContract extends Contract = Contract> extends ProvenTx {
    private postDeployCtor;
    private instance;
    constructor(wallet: PXE | Wallet, tx: Tx, postDeployCtor: (address: AztecAddress, wallet: Wallet) => Promise<TContract>, instance: ContractInstanceWithAddress);
    /**
     * Sends the transaction to the network via the provided wallet.
     */
    send(): DeploySentTx<TContract>;
}
//# sourceMappingURL=deploy_proven_tx.d.ts.map